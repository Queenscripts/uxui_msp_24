"use strict";(()=>{var e={};e.id=675,e.ids=[675],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,n)=>{Object.defineProperty(n,"l",{enumerable:!0,get:function(){return function e(n,t){return t in n?n[t]:"then"in n&&"function"==typeof n.then?n.then(n=>e(n,t)):"function"==typeof n&&"default"===t?n:void 0}}})},6852:(e,n,t)=>{t.r(n),t.d(n,{config:()=>c,default:()=>u,routeModule:()=>d});var o=t(1802),r=t(7153),i=t(6249),a=t(3391);let u=(0,i.l)(a,"default"),c=(0,i.l)(a,"config"),d=new o.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/db",pathname:"/api/db",bundlePath:"",filename:""},userland:a})},3391:(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var o=t(1185),r=t.n(o);let i={},a=async function(){if(!i?.isConnected)try{let e=await r().connect(process.env.MONGODB_URI,{});i.isConnected=e.connections[0].readyState,console.log("MongoDB Connected!")}catch(e){console.error("Error connecting to MongoDB:",e)}}},7153:(e,n)=>{var t;Object.defineProperty(n,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,n,t)=>{e.exports=t(145)}};var n=require("../../webpack-api-runtime.js");n.C(e);var t=n(n.s=6852);module.exports=t})();