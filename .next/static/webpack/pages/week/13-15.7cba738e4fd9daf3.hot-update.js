"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/week/13-15",{

/***/ "./src/pages/week/13-15.tsx":
/*!**********************************!*\
  !*** ./src/pages/week/13-15.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_views_cards_CardNavigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/views/cards/CardNavigation */ \"./src/views/cards/CardNavigation.tsx\");\n/* harmony import */ var src_components_ProtectedRoute__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/ProtectedRoute */ \"./src/components/ProtectedRoute.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\nvar _this = undefined;\n\n\n\n\nvar One = function() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(src_components_ProtectedRoute__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(src_views_cards_CardNavigation__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                // video={true}\n                // videoLinks={[\n                // ]}\n                moduleTitle: \"Weeks 13-15: Week 15\",\n                activitiesHeader: \"Group Project Prototyping Phase\",\n                // activitiesLink=\"https://drive.google.com/drive/folders/1BF8PQUURNcnY9Zqh9yj1SJ3_rOG_C-FW\"\n                slidesLinks: [\n                    \"https://docs.google.com/presentation/d/e/2PACX-1vTafLxMZLuCde4RAX4aZDU1fiQ2T4iYq9qG4fuJ7CfNjqUoJZq4gCHmhT6EUU_2-qK2qX5AgJyK6jKU/embed?start=false&loop=false&delayms=10000\",\n                    \"https://docs.google.com/presentation/d/e/2PACX-1vRtcEmZ0bh_AOGazPCoLY2_gkgAwrXjKBzt-CA6FwpYEn2SuL6eu_iUbw-YoQFSbDyaPTwZ7n_byInc/embed?start=false&loop=false&delayms=10000\", \n                ],\n                day2Activities: [\n                    \"https://drive.google.com/drive/folders/1E_FF7WxMCr2JrAT9f1JE-FV687cOMsAo\",\n                    \"13.2-01 Design Sprints Day 1\",\n                    \"13.2-02 Design Sprints Day 2\"\n                ],\n                slideURL: \"https://drive.google.com/drive/folders/16awTdNZQVOnhYzrfrF5iHuat2sYyz9iE?usp=sharing\",\n                moduleChallengeLink: \"https://docs.google.com/document/d/1QIypg69qWY_YfNUsI20up4-66dlMZS5flMk3XjQblpg/edit?tab=t.0\",\n                challengeDeliverables: \"In this Challenge, you and your team will kick off a redesign of an actual nonprofit website. (You‘ll continue to build on this project in upcoming Challenges.) In your design career, you‘ll often work on existing products and how to best meet user needs. In this Challenge, you‘ll rapidly innovate and collaborate with others to develop ideas for potential implementation. This project will showcase your skills as a creative thinker, a collaborator, and a designer who can follow through on projects of varying sizes.\"\n            }, void 0, false, {\n                fileName: \"/Users/queen/Desktop/uxui_MSP_24/src/pages/week/13-15.tsx\",\n                lineNumber: 75,\n                columnNumber: 1\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                fileName: \"/Users/queen/Desktop/uxui_MSP_24/src/pages/week/13-15.tsx\",\n                lineNumber: 147,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                fileName: \"/Users/queen/Desktop/uxui_MSP_24/src/pages/week/13-15.tsx\",\n                lineNumber: 148,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(src_views_cards_CardNavigation__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                moduleTitle: \"Weeks 13-15: Week 14\",\n                activitiesHeader: \"Content Design\",\n                activitiesLink: \"https://drive.google.com/drive/folders/1BF8PQUURNcnY9Zqh9yj1SJ3_rOG_C-FW\",\n                day1Activities: [\n                    \"https://drive.google.com/drive/folders/1ewZeXa-pqVjRokTFBSHng1pZYh6J8xxu\",\n                    \"14.1-01 Content Inventory\",\n                    \"14.1-02 Content Audit\",\n                    \"Content Inventory and Audit\"\n                ],\n                // day2Activities={[\n                //   \"https://drive.google.com/drive/folders/1Qty8lOyVNy7JOpq1BpEP1vpb71BbtvQ6\",\n                //   \"14.2-01 Brand Visual Identity\",\n                // ]}\n                // day3Activities={[\n                //   \"https://drive.google.com/drive/folders/1twY7QVW2Sb5q2vuHv0STjUY_30bJMvoo\",\n                //   \"14.3-01 Brand Positioning Statements\",\n                //   \"14.3-01 Brand Positioning Statements Template\",\n                //   \"14.3-02 Brand Voice and Tone Matrix\"\n                // ]}\n                slidesLinks: [\n                    \"https://docs.google.com/presentation/d/e/2PACX-1vRa4UB310N5S_Ta3-U0mDA-H8b10VqVE-OwU_g9ppTr16JVn-8BLitcKjCjnEXru7E6XApfg6m67M8t/embed?start=true&loop=true&delayms=5000\", \n                ],\n                slideURL: \"https://drive.google.com/drive/folders/1f3Ax8yHfsRL-MUi33d83Ex_JGUupyHcK?usp=sharing\",\n                moduleChallengeLink: \"https://docs.google.com/document/d/1LXegaHDZLdim1NEdeSX-n01rz7T-1aTVYD3yXkL8rgk/edit?tab=t.0\",\n                challengeDeliverables: \"You will work with your group to analyze the content of the non-profit website that you’re redesigning, and then you’ll design an information architecture and navigation system for your new version of the website.\",\n                glossaryTerms: [\n                    {\n                        term: \"Affinity Mapping\",\n                        definition: \"A method employed to systematically categorize and group data into themes or patterns, aiding in data analysis and interpretation.\"\n                    },\n                    {\n                        term: \"Behavioral Archetypes\",\n                        definition: \"Common and representative user behaviors that offer valuable insights into user needs and motivations, facilitating a deeper understanding of user preferences and actions.\"\n                    },\n                    {\n                        term: \"Creative Matrix\",\n                        definition: \"An innovative tool utilized to spark and cultivate design concepts by integrating diverse elements or variables, fostering creativity and idea generation in the design process.\"\n                    },\n                    {\n                        term: \"Empathy Framework\",\n                        definition: \"A structured approach designed to foster designers' understanding of users' emotions, thoughts, and behaviors, enabling empathetic design solutions that resonate with user experiences and needs.\"\n                    },\n                    {\n                        term: \"HMW Statement\",\n                        definition: \"A 'How Might We' statement reframes a problem as an opportunity to inspire innovative solutions and design thinking. For example, How might we re-create the travel planning experience online to help users spend less time packing?\"\n                    },\n                    {\n                        term: \"Ideate\",\n                        definition: \"A 'How Might We' statement reframes a problem as an opportunity to inspire innovative solutions and design thinking. For example, How might we re-create the travel planning experience online to help users spend less time packing?\"\n                    },\n                    {\n                        term: \"POV Statement\",\n                        definition: \"A 'Point of View' statement that articulates user needs, insights, and perspectives, guiding the design process towards addressing user issues and creating impactful solutions. Priority Matrix: A tool to rank and prioritize items according to their significance and time sensitivity, aiding in effective decision-making and task management.\"\n                    },\n                    {\n                        term: \"Storyboard\",\n                        definition: \" A visual sequence of illustrations depicting critical moments or interactions in a user's journey or experience with a product or service, helping to visualize and understand the user's interaction flow.\"\n                    },\n                    {\n                        term: \"Synthesize\",\n                        definition: \"The process of merging and integrating various elements or information to create a unified and coherent whole, facilitating clarity and understanding in complex design or problem-solving processes.\"\n                    },\n                    {\n                        term: \"User Flow\",\n                        definition: \" A graphical depiction illustrating the sequential steps a user follows to accomplish a specific task within a system or application, helping to visualize the user's interaction path.\"\n                    },\n                    {\n                        term: \"User Insights\",\n                        definition: \"Valuable findings derived from user research that guide and shape design decisions, ensuring user-centered solutions and experiences.\"\n                    },\n                    {\n                        term: \"User Journey\",\n                        definition: \"A visual narrative mapping out a user's complete experience with a product or service, providing insights into the user's interactions, emotions, and touchpoints throughout the entire journey.\"\n                    },\n                    {\n                        term: \"Wireframes\",\n                        definition: \"Simplified and visual blueprints showcasing the skeletal structure and layout of a website or application, focusing on functionality and content placement during the design process.\"\n                    }, \n                ]\n            }, void 0, false, {\n                fileName: \"/Users/queen/Desktop/uxui_MSP_24/src/pages/week/13-15.tsx\",\n                lineNumber: 150,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                fileName: \"/Users/queen/Desktop/uxui_MSP_24/src/pages/week/13-15.tsx\",\n                lineNumber: 248,\n                columnNumber: 1\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/queen/Desktop/uxui_MSP_24/src/pages/week/13-15.tsx\",\n        lineNumber: 6,\n        columnNumber: 5\n    }, _this);\n};\n_c = One;\n/* harmony default export */ __webpack_exports__[\"default\"] = (One);\nvar _c;\n$RefreshReg$(_c, \"One\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUc7Ozs7OzthQTBKZSxDQUVqQjtBQUNKLENBQUM7QUFqWktSLEtBQUFBLEdBQUc7QUFtWlQsK0RBQWVBLEdBQUcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvd2Vlay8xMy0xNS50c3g/NDg5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FyZE5hdmlnYXRpb24gZnJvbSBcInNyYy92aWV3cy9jYXJkcy9DYXJkTmF2aWdhdGlvblwiO1xuaW1wb3J0IFByb3RlY3RlZFJvdXRlIGZyb20gXCJzcmMvY29tcG9uZW50cy9Qcm90ZWN0ZWRSb3V0ZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuY29uc3QgT25lID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxQcm90ZWN0ZWRSb3V0ZT5cbiAgICAgIHsvKiA8Q2FyZE5hdmlnYXRpb25cbiAgICAgICAgdmlkZW89e3RydWV9XG4gICAgICAgIHZpZGVvTGlua3M9e1tcbiAgICAgICAgXCJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9ZVzJXcENTZE5sOD9zaT1nY0hnS3FrWU1aQVpKaGNBXCIsXG4gICAgICAgIFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvZWJQTFljQXhfX3M/c2k9Wjhlekx3WTU1RGNrc2hOeVwiLFxuICAgICAgICBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL3Vad1JWY2tqUVdJP3NpPW95RWI5cWNCOFREaXFyeFdcIixcbiAgICAgICAgXCJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9aVlpmV2ZxbVJCWT9zaT0zNXNhTm5DZTg0S2Z3aGlnXCIgXG4gICAgICAgIF19XG4gICAgICAgIG1vZHVsZVRpdGxlPVwiV2Vla3MgMTMtMTU6IFdlZWsgMTVcIlxuICAgICAgICBhY3Rpdml0aWVzSGVhZGVyPVwiR3JvdXAgUHJvamVjdCBQcmVzZW50YXRpb25zXCJcbiAgICAgICAgYWN0aXZpdGllc0xpbms9XCJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8xQkY4UFFVVVJOY25ZOVpxaDl5ajFTSjNfck9HX0MtRldcIlxuICAgICAgICBzbGlkZXNMaW5rcz17W1xuICAgICAgICAgIGBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9wcmVzZW50YXRpb24vZC9lLzJQQUNYLTF2UWtmcy1lUk5PMk9wdkx2cHhtT05NVHd4ejY5bldYOWhpYU5fczRqa2lPQUdSOGVIMHptZVVpYTJDVHA5T1Fpb3BHUW9pdFVXYWhndi10L2VtYmVkP3N0YXJ0PXRydWUmbG9vcD10cnVlJmRlbGF5bXM9MTAwMDBgLFxuICAgICAgICAgIGBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9wcmVzZW50YXRpb24vZC9lLzJQQUNYLTF2VFY1eEFkeUNIVnZ0WVFZd1ZNQWlZMXdNY3k0aTVOd09ndHBGTTN3UExqMEtFN2V5bU1ySVprUHM1SkFWS3Qxa2ZWTlZpaWNEeVlXVnhWL2VtYmVkP3N0YXJ0PXRydWUmbG9vcD10cnVlJmRlbGF5bXM9MTAwMDBgLFxuICAgICBgaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvZS8yUEFDWC0xdlFZaXNwUjZoeDlrb2psaHZjci02dDlyb2tvSTBia3ZDd1I4TUxDUzhxMnBKUnhsU1BjQ3h6dlhLRzR3QnVPWFJsQ1JBYWpYVnBBYTNMRy9lbWJlZD9zdGFydD10cnVlJmxvb3A9dHJ1ZSZkZWxheW1zPTEwMDAwYFxuICAgICAgICBdfVxuICAgICAgICBzbGlkZVVSTD1cImh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzF0T3pqWEdodi1oYmJNZUtsOGJIeTFrajlkVHdxY250YT91c3A9c2hhcmluZ1wiXG4gICAgICAgIG1vZHVsZUNoYWxsZW5nZUxpbms9XCJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFKRC1ZQWlIbzlBZ21VVklVTkJyWmlYbzgteWt2ckd0eEl4TTdtVGFDRzNjL2VkaXQ/dGFiPXQuMFwiXG4gICAgICAgIGNoYWxsZW5nZURlbGl2ZXJhYmxlcz1cIldpY2tlZCBQcm9ibGVtIFByZXNlbnRhdGlvbnNcIlxuICAgICAgICBnbG9zc2FyeVRlcm1zPXtbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJDYXNlIFN0dWR5XCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIkFuIGVsYWJvcmF0ZSBleGFtaW5hdGlvbiBvZiBhIHByb2plY3QsIHNjZW5hcmlvLCBvciBkZXNpZ24gcHJvY2VzcyB0aGF0IGRlbHZlcyBpbnRvIHRoZSBzdGVwcyB1bmRlcnRha2VuIGFuZCB0aGUgcmVzdWx0cyBvYnRhaW5lZCwgb2ZmZXJpbmcgaW5zaWdodHMgaW50byBhY3Rpb25zIGFuZCBhY2hpZXZlbWVudHMuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkNsaWNrYWJsZSBQcm90b3R5cGVcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQSBmdW5jdGlvbmFsIG1vZGVsIG9mIGEgZGlnaXRhbCBwcm9kdWN0IHRoYXQgZW5hYmxlcyB1c2VyIGludGVyYWN0aW9uIHRocm91Z2ggY2xpY2tpbmcgb24gZWxlbWVudHMsIGxpa2UgYnV0dG9ucyBvciBsaW5rcywgdG8gbmF2aWdhdGUgYW5kIGV2YWx1YXRlIHRoZSBsYXlvdXQgYW5kIGZlYXR1cmVzLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJDb25zdHJ1Y3RpdmUgRmVlZGJhY2tcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiRmVlZGJhY2sgYWltZWQgYXQgYmVpbmcgY29uc3RydWN0aXZlIGFuZCBiZW5lZmljaWFsLCBvZmZlcmluZyBzdWdnZXN0aW9ucyBmb3IgZW5oYW5jZW1lbnQgd2l0aG91dCBleGNlc3NpdmUgY3JpdGljaXNtLCBwcm9tb3RpbmcgZ3Jvd3RoIGFuZCBpbXByb3ZlbWVudC5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiRGVsaXZlcmFibGVzXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIlRhbmdpYmxlIHJlc3VsdHMgb3IgcHJvZHVjdHMgZ2VuZXJhdGVkIGZyb20gYSBwcm9qZWN0J3MgZWZmb3J0cywgZW5jb21wYXNzaW5nIHByZXNlbnRhdGlvbnMsIHJlcG9ydHMsIG9yIGRlc2lnbnMgdGhhdCBhcmUgZGVsaXZlcmVkIG9yIHByb3ZpZGVkIGFzIG91dGNvbWVzIG9mIHRoZSBwcm9qZWN0IHdvcmsuXCIsXG4gICAgICAgICAgfSx7XG4gICAgICAgICAgICB0ZXJtOiBcIkdsb3cgYW5kIEdyb3cgTWV0aG9kXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIkEgZmVlZGJhY2sgYXBwcm9hY2ggdGhhdCBlbXBoYXNpemVzIHJlY29nbml6aW5nIHN0cmVuZ3RocyAoR2xvdykgYW5kIG9mZmVyaW5nIGNvbnN0cnVjdGl2ZSBzdWdnZXN0aW9ucyBmb3IgZ3Jvd3RoIG9yIGVuaGFuY2VtZW50IChHcm93KS5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiUHJlc2VudGVyIE5vdGVzXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIlN1cHBsZW1lbnRhcnkgaW5mb3JtYXRpb24gb3Iga2V5IHBvaW50cyBhY2NvbXBhbnlpbmcgcHJlc2VudGF0aW9uIHNsaWRlcyB0byBhc3Npc3QgdGhlIHNwZWFrZXIgaW4gZGVsaXZlcmluZyB0aGUgY29udGVudCBlZmZlY3RpdmVseS5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiUHJvamVjdCBSZXZpZXdcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQW4gZXZhbHVhdGlvbiBwcm9jZWR1cmUgdGhhdCBhc3Nlc3NlcyBwcm9qZWN0IG9iamVjdGl2ZXMsIGRlbGl2ZXJhYmxlcywgYW5kIGJlbmNobWFya3MgdG8gZW5zdXJlIHN1Y2Nlc3NmdWwgcHJvamVjdCBjb21wbGV0aW9uIGFuZCBhbGlnbm1lbnQgd2l0aCBkZXNpcmVkIG91dGNvbWVzLlwiLFxuICAgICAgICAgIH0sXG5cblxuICAgICAgICBdfVxuICAgICAgLz5cblxuICAgICAgPGJyIC8+XG4gICAgICA8YnIgLz5cblxuXG4gICAgXG5cbiAgICAgIFxuICAgICAgKi99XG5cbjxDYXJkTmF2aWdhdGlvblxuICAgICAgICAvLyB2aWRlbz17dHJ1ZX1cbiAgICAgICAgLy8gdmlkZW9MaW5rcz17W1xuICAgICAgICAgXG4gICAgICAgIC8vIF19XG4gICAgICAgIG1vZHVsZVRpdGxlPVwiV2Vla3MgMTMtMTU6IFdlZWsgMTVcIlxuICAgICAgICBhY3Rpdml0aWVzSGVhZGVyPVwiR3JvdXAgUHJvamVjdCBQcm90b3R5cGluZyBQaGFzZVwiXG4gICAgICAgIC8vIGFjdGl2aXRpZXNMaW5rPVwiaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMUJGOFBRVVVSTmNuWTlacWg5eWoxU0ozX3JPR19DLUZXXCJcbiAgICAgICAgc2xpZGVzTGlua3M9e1tcbiAgICAgICAgICBgaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvZS8yUEFDWC0xdlRhZkx4TVpMdUNkZTRSQVg0YVpEVTFmaVEyVDRpWXE5cUc0ZnVKN0NmTmpxVW9KWnE0Z0NIbWhUNkVVVV8yLXFLMnFYNUFnSnlLNmpLVS9lbWJlZD9zdGFydD1mYWxzZSZsb29wPWZhbHNlJmRlbGF5bXM9MTAwMDBgLFxuICAgICAgICAgIGBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9wcmVzZW50YXRpb24vZC9lLzJQQUNYLTF2UnRjRW1aMGJoX0FPR2F6UENvTFkyX2drZ0F3clhqS0J6dC1DQTZGd3BZRW4yU3VMNmV1X2lVYnctWW9RRlNiRHlhUFR3WjduX2J5SW5jL2VtYmVkP3N0YXJ0PWZhbHNlJmxvb3A9ZmFsc2UmZGVsYXltcz0xMDAwMGAsXG4gICAgICAgICAgLy8gYGh0dHBzOi8vZG9jcy5nb29nbGUuY29tL3ByZXNlbnRhdGlvbi9kL2UvMlBBQ1gtMXZUcVZEXzJsYjJRNXZZaFExSnJXSUZXR244N0p1RWxCS3ZKSkVWTzA2Uk9lT0NOc2NTX0VIQlRNV29vZjB3M0g0cDRvR3pWQ2RERFhyTkwvZW1iZWQ/c3RhcnQ9ZmFsc2UmbG9vcD1mYWxzZSZkZWxheW1zPTEwMDAwYCxcbiAgICAgICAgXX1cbiAgICAgICAgZGF5MkFjdGl2aXRpZXM9e1tgaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMUVfRkY3V3hNQ3IySnJBVDlmMUpFLUZWNjg3Y09Nc0FvYCxcIjEzLjItMDEgRGVzaWduIFNwcmludHMgRGF5IDFcIiwgXCIxMy4yLTAyIERlc2lnbiBTcHJpbnRzIERheSAyXCJdfVxuICAgICAgICBzbGlkZVVSTD1cImh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzE2YXdUZE5aUVZPbmhZenJmckY1aUh1YXQyc1l5ejlpRT91c3A9c2hhcmluZ1wiXG4gICAgICAgIG1vZHVsZUNoYWxsZW5nZUxpbms9XCJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFRSXlwZzY5cVdZX1lmTlVzSTIwdXA0LTY2ZGxNWlM1ZmxNazNYalFibHBnL2VkaXQ/dGFiPXQuMFwiXG4gICAgICAgIGNoYWxsZW5nZURlbGl2ZXJhYmxlcz1cIkluIHRoaXMgQ2hhbGxlbmdlLCB5b3UgYW5kIHlvdXIgdGVhbSB3aWxsIGtpY2sgb2ZmIGEgcmVkZXNpZ24gb2YgYW4gYWN0dWFsIG5vbnByb2ZpdCB3ZWJzaXRlLiAoWW91JmxzcXVvO2xsIGNvbnRpbnVlIHRvIGJ1aWxkIG9uIHRoaXMgcHJvamVjdCBpbiB1cGNvbWluZyBDaGFsbGVuZ2VzLikgSW4geW91ciBkZXNpZ24gY2FyZWVyLCB5b3UmbHNxdW87bGwgb2Z0ZW4gd29yayBvbiBleGlzdGluZyBwcm9kdWN0cyBhbmQgaG93IHRvIGJlc3QgbWVldCB1c2VyIG5lZWRzLiBJbiB0aGlzIENoYWxsZW5nZSwgeW91JmxzcXVvO2xsIHJhcGlkbHkgaW5ub3ZhdGUgYW5kIGNvbGxhYm9yYXRlIHdpdGggb3RoZXJzIHRvIGRldmVsb3AgaWRlYXMgZm9yIHBvdGVudGlhbCBpbXBsZW1lbnRhdGlvbi4gVGhpcyBwcm9qZWN0IHdpbGwgc2hvd2Nhc2UgeW91ciBza2lsbHMgYXMgYSBjcmVhdGl2ZSB0aGlua2VyLCBhIGNvbGxhYm9yYXRvciwgYW5kIGEgZGVzaWduZXIgd2hvIGNhbiBmb2xsb3cgdGhyb3VnaCBvbiBwcm9qZWN0cyBvZiB2YXJ5aW5nIHNpemVzLlwiXG4gICAgICAgIC8vIGdsb3NzYXJ5VGVybXM9e1tcbiAgICAgICAgLy8gICB7XG4gICAgICAgIC8vICAgICB0ZXJtOiBcIkFjY2Vzc2liaWxpdHlcIixcbiAgICAgICAgLy8gICAgIGRlZmluaXRpb246XG4gICAgICAgIC8vICAgICAgIFwiQ3JlYXRpbmcgcHJvZHVjdHMsIGRldmljZXMsIHNlcnZpY2VzLCBvciBlbnZpcm9ubWVudHMgdGhhdCBjYXRlciB0byBhIGRpdmVyc2UgcmFuZ2Ugb2YgYWJpbGl0aWVzIGFuZCBkaXNhYmlsaXRpZXMsIGVuc3VyaW5nIGluY2x1c2l2aXR5IGFuZCB1c2FiaWxpdHkgZm9yIGFsbCBpbmRpdmlkdWFscy5cIixcbiAgICAgICAgLy8gICB9LFxuXG4gICAgICAgIC8vICAge1xuICAgICAgICAvLyAgICAgdGVybTogXCJBTUEgKEFzayBNZSBBbnl0aGluZylcIixcbiAgICAgICAgLy8gICAgIGRlZmluaXRpb246XG4gICAgICAgIC8vICAgICAgIFwiIEEgbGl2ZSBzZXNzaW9uIHdoZXJlIHN0dWRlbnRzIGVuZ2FnZSB3aXRoIGluc3RydWN0b3JzLCBwb3NpbmcgcXVlc3Rpb25zIG9uIHNwZWNpZmljIHRvcGljcyBsaWtlIFVYL1VJLCBkZXNpZ24gdGhpbmtpbmcsIG9yIGNhcmVlci1yZWxhdGVkIGlucXVpcmllcy5cIixcbiAgICAgICAgLy8gICB9LFxuICAgICAgICAvLyAgIHtcbiAgICAgICAgLy8gICAgIHRlcm06IFwiQ2xpY2thYmxlIFByb3RvdHlwZVwiLFxuICAgICAgICAvLyAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgLy8gICAgICAgXCIgQSBmdW5jdGlvbmFsIG1vZGVsIG9mIGEgZGlnaXRhbCBwcm9kdWN0IHRoYXQgZW5hYmxlcyB1c2VyIGludGVyYWN0aW9uIHRocm91Z2ggY2xpY2tpbmcgb24gZWxlbWVudHMsIGxpa2UgYnV0dG9ucyBvciBsaW5rcywgdG8gbmF2aWdhdGUgYW5kIGV2YWx1YXRlIHRoZSBsYXlvdXQgYW5kIGZlYXR1cmVzLlwiLFxuICAgICAgICAvLyAgIH0sXG4gICAgICAgIC8vICAge1xuICAgICAgICAvLyAgICAgdGVybTogXCJDb2duaXRpdmUgRGlzYWJpbGl0aWVzXCIsXG4gICAgICAgIC8vICAgICBkZWZpbml0aW9uOlxuICAgICAgICAvLyAgICAgICBcIkNvbmRpdGlvbnMgaW1wYWN0aW5nIGNvZ25pdGl2ZSBmdW5jdGlvbnMgc3VjaCBhcyBtZW1vcnksIGF0dGVudGlvbiwgcHJvYmxlbS1zb2x2aW5nLCBhbmQgbGFuZ3VhZ2UgYWJpbGl0aWVzLCBpbmZsdWVuY2luZyBob3cgaW5kaXZpZHVhbHMgcHJvY2VzcyBhbmQgcmVzcG9uZCB0byBpbmZvcm1hdGlvbi5cIixcbiAgICAgICAgLy8gICB9LFxuICAgICAgICAvLyAgIHtcbiAgICAgICAgLy8gICAgIHRlcm06IFwiQ29sb3IgQ29udHJhc3RcIixcbiAgICAgICAgLy8gICAgIGRlZmluaXRpb246XG4gICAgICAgIC8vICAgICAgIFwiVGhlIGRpc3RpbmN0aW9uIGluIGJyaWdodG5lc3Mgb3IgY29sb3IgYmV0d2VlbiB0ZXh0IGFuZCBpdHMgYmFja2dyb3VuZCwgY3J1Y2lhbCBmb3IgZW5oYW5jaW5nIHJlYWRhYmlsaXR5IGFuZCBhY2Nlc3NpYmlsaXR5IGZvciB1c2VycyB3aXRoIHZpc3VhbCBpbXBhaXJtZW50cywgZW5zdXJpbmcgY2xlYXIgdmlzdWFsIGNvbW11bmljYXRpb24uXCIsXG4gICAgICAgIC8vICAgfSxcbiAgICAgICAgLy8gICB7XG4gICAgICAgIC8vICAgICB0ZXJtOiBcIkVxdWl0YWJsZSBBY2Nlc3NcIixcbiAgICAgICAgLy8gICAgIGRlZmluaXRpb246XG4gICAgICAgIC8vICAgICAgIFwiIFRvb2xzIGFuZCByZXNvdXJjZXMgdG8gZW5zdXJlIGZhaXIgYW5kIGJhbGFuY2VkIGFjY2VzcyB0byBpbmZvcm1hdGlvbiBhbmQgc2VydmljZXMgZm9yIGFsbCB1c2VycywgcHJvbW90aW5nIGluY2x1c2l2aXR5IGFuZCBlcXVhbCBvcHBvcnR1bml0aWVzLlwiLFxuICAgICAgICAvLyAgIH0sXG4gICAgICAgIC8vICAge1xuICAgICAgICAvLyAgICAgdGVybTogXCJJbmNsdXNpdmUgRGVzaWduXCIsXG4gICAgICAgIC8vICAgICBkZWZpbml0aW9uOlxuICAgICAgICAvLyAgICAgICBcIlRoZSBwcmFjdGljZSBvZiBkZXZlbG9waW5nIHByb2R1Y3RzLCBzZXJ2aWNlcywgb3IgZW52aXJvbm1lbnRzIHRoYXQgcHJpb3JpdGl6ZSBkaXZlcnNlIHVzZXIgbmVlZHMsIGluY2x1ZGluZyB0aG9zZSB3aXRoIGRpc2FiaWxpdGllcywgdG8gZ3VhcmFudGVlIGFjY2Vzc2liaWxpdHkgYW5kIHVzYWJpbGl0eSBmb3IgYWxsIGluZGl2aWR1YWxzLlwiLFxuICAgICAgICAvLyAgIH0sXG4gICAgICAgIC8vICAge1xuICAgICAgICAvLyAgICAgdGVybTogXCJJbnRlcmFjdGl2ZSBQcm90b3R5cGVcIixcbiAgICAgICAgLy8gICAgIGRlZmluaXRpb246XG4gICAgICAgIC8vICAgICAgIFwiQSBkeW5hbWljIG1vZGVsIHRoYXQgbWltaWNzIHRoZSBpbnRlcmFjdGl2ZSBmdW5jdGlvbmFsaXRpZXMgb2YgYSBmaW5hbCBwcm9kdWN0LCBhbGxvd2luZyB1c2VycyB0byBlbmdhZ2Ugd2l0aCB0aGUgZGVzaWduIHRocm91Z2ggYWN0aW9ucyBsaWtlIGNsaWNraW5nLCBzd2lwaW5nLCBhbmQgaW50ZXJhY3Rpbmcgd2l0aCB2YXJpb3VzIGVsZW1lbnRzLlwiLFxuICAgICAgICAvLyAgIH0sXG4gICAgICAgIC8vICAge1xuICAgICAgICAvLyAgICAgdGVybTogXCJVbml2ZXJzYWwgRGVzaWduXCIsXG4gICAgICAgIC8vICAgICBkZWZpbml0aW9uOlxuICAgICAgICAvLyAgICAgICBcIlRoZSBhcHByb2FjaCBvZiBjcmVhdGluZyBwcm9kdWN0cywgc2VydmljZXMsIG9yIGVudmlyb25tZW50cyB0aGF0IGNhdGVyIHRvIHRoZSBicm9hZGVzdCBzcGVjdHJ1bSBvZiBpbmRpdmlkdWFscyBwb3NzaWJsZSwgcmVnYXJkbGVzcyBvZiBhYmlsaXRpZXMgb3IgZGlzYWJpbGl0aWVzLCBwcm9tb3RpbmcgZXF1YWwgYWNjZXNzIGFuZCB1c2FiaWxpdHkgZm9yIGFsbCB1c2Vycy5cIixcbiAgICAgICAgLy8gICB9LFxuICAgICAgICAvLyAgIHtcbiAgICAgICAgLy8gICAgIHRlcm06IFwiV0NBRyAoV2ViIENvbnRlbnQgQWNjZXNzaWJpbGl0eSBHdWlkZWxpbmVzKVwiLFxuICAgICAgICAvLyAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgLy8gICAgICAgXCJJbnRlcm5hdGlvbmFsbHkgcmVjb2duaXplZCBzdGFuZGFyZHMgc3BlY2lmeWluZyBndWlkZWxpbmVzIGZvciB3ZWIgYWNjZXNzaWJpbGl0eSwgZmFjaWxpdGF0aW5nIHRoZSBjcmVhdGlvbiBvZiB3ZWIgY29udGVudCB0aGF0IGlzIGluY2x1c2l2ZSBhbmQgYWNjZXNzaWJsZSB0byBpbmRpdmlkdWFscyB3aXRoIGRpc2FiaWxpdGllcy5cIixcbiAgICAgICAgLy8gICB9LFxuICAgICAgICAvLyBdfVxuICAgICAgLz5cblxuICAgICAgPGJyIC8+XG4gICAgICA8YnIgLz5cblxuICAgICAgPENhcmROYXZpZ2F0aW9uXG4gICAgICAgIG1vZHVsZVRpdGxlPVwiV2Vla3MgMTMtMTU6IFdlZWsgMTRcIlxuICAgICAgICBhY3Rpdml0aWVzSGVhZGVyPVwiQ29udGVudCBEZXNpZ25cIlxuICAgICAgICBhY3Rpdml0aWVzTGluaz1cImh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzFCRjhQUVVVUk5jblk5WnFoOXlqMVNKM19yT0dfQy1GV1wiXG4gICAgICAgIGRheTFBY3Rpdml0aWVzPXtbXG4gICAgICAgICAgXCJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8xZXdaZVhhLXBxVmpSb2tURkJTSG5nMXBaWWg2Sjh4eHVcIixcbiAgICAgICAgICBcIjE0LjEtMDEgQ29udGVudCBJbnZlbnRvcnlcIixcbiAgICAgICAgICBcIjE0LjEtMDIgQ29udGVudCBBdWRpdFwiLFxuICAgICAgICAgIFwiQ29udGVudCBJbnZlbnRvcnkgYW5kIEF1ZGl0XCJcbiAgICAgICAgXX1cbiAgICAgICAgLy8gZGF5MkFjdGl2aXRpZXM9e1tcbiAgICAgICAgLy8gICBcImh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzFRdHk4bE95Vk55N0pPcHExQnBFUDF2cGI3MUJidHZRNlwiLFxuICAgICAgICAvLyAgIFwiMTQuMi0wMSBCcmFuZCBWaXN1YWwgSWRlbnRpdHlcIixcbiAgICAgICAgICBcbiAgICAgICAgLy8gXX1cbiAgICAgICAgLy8gZGF5M0FjdGl2aXRpZXM9e1tcbiAgICAgICAgLy8gICBcImh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzF0d1k3UVZXMlNiNXEydnVIdjBTVGpVWV8zMGJKTXZvb1wiLFxuICAgICAgICAvLyAgIFwiMTQuMy0wMSBCcmFuZCBQb3NpdGlvbmluZyBTdGF0ZW1lbnRzXCIsXG4gICAgICAgIC8vICAgXCIxNC4zLTAxIEJyYW5kIFBvc2l0aW9uaW5nIFN0YXRlbWVudHMgVGVtcGxhdGVcIixcbiAgICAgICAgLy8gICBcIjE0LjMtMDIgQnJhbmQgVm9pY2UgYW5kIFRvbmUgTWF0cml4XCJcbiAgICAgICAgLy8gXX1cbiAgICAgICAgc2xpZGVzTGlua3M9e1tcbiAgICAgICAgICBgaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvZS8yUEFDWC0xdlJhNFVCMzEwTjVTX1RhMy1VMG1EQS1IOGIxMFZxVkUtT3dVX2c5cHBUcjE2SlZuLThCTGl0Y0tqQ2puRVhydTdFNlhBcGZnNm02N004dC9lbWJlZD9zdGFydD10cnVlJmxvb3A9dHJ1ZSZkZWxheW1zPTUwMDBgLFxuICAgICAgICAgIC8vIGBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9wcmVzZW50YXRpb24vZC9lLzJQQUNYLTF2VDJ0T2tsblpLUnBsYUttaGtPbTZ4ZHlaT3ZVaHVneU1xQzJkOHhKc19JcjE3VHdDMnpxVXNKMk53cFRZd1pueC15eHA5d05tTG1jRmhsL2VtYmVkP3N0YXJ0PXRydWUmbG9vcD10cnVlJmRlbGF5bXM9NTAwMGAsXG4gICAgICAgICAgLy8gYGh0dHBzOi8vZG9jcy5nb29nbGUuY29tL3ByZXNlbnRhdGlvbi9kL2UvMlBBQ1gtMXZRQmxZdkYyUzdwMW1VN0lSdU1oYzZDcFdoeUZaRWlpZE5TbU9OaGFrb1Y1QjBvVE9yZkRtNUpydC1RakVZcmtKVEZPdWVxREtNaHN6WVgvZW1iZWQ/c3RhcnQ9dHJ1ZSZsb29wPXRydWUmZGVsYXltcz01MDAwYCxcbiAgICAgICAgXX1cbiAgICAgICAgc2xpZGVVUkw9XCJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8xZjNBeDh5SGZzUkwtTVVpMzNkODNFeF9KR1V1cHlIY0s/dXNwPXNoYXJpbmdcIlxuICAgICAgICBtb2R1bGVDaGFsbGVuZ2VMaW5rPVwiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xTFhlZ2FIRFpMZGltMU5FZGVTWC1uMDFyejdULTFhVFZZRDN5WGtMOHJnay9lZGl0P3RhYj10LjBcIlxuICAgICAgICBjaGFsbGVuZ2VEZWxpdmVyYWJsZXM9XCJZb3Ugd2lsbCB3b3JrIHdpdGggeW91ciBncm91cCB0byBhbmFseXplIHRoZSBjb250ZW50IG9mIHRoZSBub24tcHJvZml0IHdlYnNpdGUgdGhhdCB5b3XigJlyZSByZWRlc2lnbmluZywgYW5kIHRoZW4geW914oCZbGwgZGVzaWduIGFuIGluZm9ybWF0aW9uIGFyY2hpdGVjdHVyZSBhbmQgbmF2aWdhdGlvbiBzeXN0ZW0gZm9yIHlvdXIgbmV3IHZlcnNpb24gb2YgdGhlIHdlYnNpdGUuXCJcbiAgICAgICAgZ2xvc3NhcnlUZXJtcz17W1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiQWZmaW5pdHkgTWFwcGluZ1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJBIG1ldGhvZCBlbXBsb3llZCB0byBzeXN0ZW1hdGljYWxseSBjYXRlZ29yaXplIGFuZCBncm91cCBkYXRhIGludG8gdGhlbWVzIG9yIHBhdHRlcm5zLCBhaWRpbmcgaW4gZGF0YSBhbmFseXNpcyBhbmQgaW50ZXJwcmV0YXRpb24uXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkJlaGF2aW9yYWwgQXJjaGV0eXBlc1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJDb21tb24gYW5kIHJlcHJlc2VudGF0aXZlIHVzZXIgYmVoYXZpb3JzIHRoYXQgb2ZmZXIgdmFsdWFibGUgaW5zaWdodHMgaW50byB1c2VyIG5lZWRzIGFuZCBtb3RpdmF0aW9ucywgZmFjaWxpdGF0aW5nIGEgZGVlcGVyIHVuZGVyc3RhbmRpbmcgb2YgdXNlciBwcmVmZXJlbmNlcyBhbmQgYWN0aW9ucy5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiQ3JlYXRpdmUgTWF0cml4XCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIkFuIGlubm92YXRpdmUgdG9vbCB1dGlsaXplZCB0byBzcGFyayBhbmQgY3VsdGl2YXRlIGRlc2lnbiBjb25jZXB0cyBieSBpbnRlZ3JhdGluZyBkaXZlcnNlIGVsZW1lbnRzIG9yIHZhcmlhYmxlcywgZm9zdGVyaW5nIGNyZWF0aXZpdHkgYW5kIGlkZWEgZ2VuZXJhdGlvbiBpbiB0aGUgZGVzaWduIHByb2Nlc3MuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkVtcGF0aHkgRnJhbWV3b3JrXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIkEgc3RydWN0dXJlZCBhcHByb2FjaCBkZXNpZ25lZCB0byBmb3N0ZXIgZGVzaWduZXJzJyB1bmRlcnN0YW5kaW5nIG9mIHVzZXJzJyBlbW90aW9ucywgdGhvdWdodHMsIGFuZCBiZWhhdmlvcnMsIGVuYWJsaW5nIGVtcGF0aGV0aWMgZGVzaWduIHNvbHV0aW9ucyB0aGF0IHJlc29uYXRlIHdpdGggdXNlciBleHBlcmllbmNlcyBhbmQgbmVlZHMuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkhNVyBTdGF0ZW1lbnRcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQSAnSG93IE1pZ2h0IFdlJyBzdGF0ZW1lbnQgcmVmcmFtZXMgYSBwcm9ibGVtIGFzIGFuIG9wcG9ydHVuaXR5IHRvIGluc3BpcmUgaW5ub3ZhdGl2ZSBzb2x1dGlvbnMgYW5kIGRlc2lnbiB0aGlua2luZy4gRm9yIGV4YW1wbGUsIEhvdyBtaWdodCB3ZSByZS1jcmVhdGUgdGhlIHRyYXZlbCBwbGFubmluZyBleHBlcmllbmNlIG9ubGluZSB0byBoZWxwIHVzZXJzIHNwZW5kIGxlc3MgdGltZSBwYWNraW5nP1wiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJJZGVhdGVcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQSAnSG93IE1pZ2h0IFdlJyBzdGF0ZW1lbnQgcmVmcmFtZXMgYSBwcm9ibGVtIGFzIGFuIG9wcG9ydHVuaXR5IHRvIGluc3BpcmUgaW5ub3ZhdGl2ZSBzb2x1dGlvbnMgYW5kIGRlc2lnbiB0aGlua2luZy4gRm9yIGV4YW1wbGUsIEhvdyBtaWdodCB3ZSByZS1jcmVhdGUgdGhlIHRyYXZlbCBwbGFubmluZyBleHBlcmllbmNlIG9ubGluZSB0byBoZWxwIHVzZXJzIHNwZW5kIGxlc3MgdGltZSBwYWNraW5nP1wiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJQT1YgU3RhdGVtZW50XCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIkEgJ1BvaW50IG9mIFZpZXcnIHN0YXRlbWVudCB0aGF0IGFydGljdWxhdGVzIHVzZXIgbmVlZHMsIGluc2lnaHRzLCBhbmQgcGVyc3BlY3RpdmVzLCBndWlkaW5nIHRoZSBkZXNpZ24gcHJvY2VzcyB0b3dhcmRzIGFkZHJlc3NpbmcgdXNlciBpc3N1ZXMgYW5kIGNyZWF0aW5nIGltcGFjdGZ1bCBzb2x1dGlvbnMuIFByaW9yaXR5IE1hdHJpeDogQSB0b29sIHRvIHJhbmsgYW5kIHByaW9yaXRpemUgaXRlbXMgYWNjb3JkaW5nIHRvIHRoZWlyIHNpZ25pZmljYW5jZSBhbmQgdGltZSBzZW5zaXRpdml0eSwgYWlkaW5nIGluIGVmZmVjdGl2ZSBkZWNpc2lvbi1tYWtpbmcgYW5kIHRhc2sgbWFuYWdlbWVudC5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiU3Rvcnlib2FyZFwiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCIgQSB2aXN1YWwgc2VxdWVuY2Ugb2YgaWxsdXN0cmF0aW9ucyBkZXBpY3RpbmcgY3JpdGljYWwgbW9tZW50cyBvciBpbnRlcmFjdGlvbnMgaW4gYSB1c2VyJ3Mgam91cm5leSBvciBleHBlcmllbmNlIHdpdGggYSBwcm9kdWN0IG9yIHNlcnZpY2UsIGhlbHBpbmcgdG8gdmlzdWFsaXplIGFuZCB1bmRlcnN0YW5kIHRoZSB1c2VyJ3MgaW50ZXJhY3Rpb24gZmxvdy5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiU3ludGhlc2l6ZVwiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJUaGUgcHJvY2VzcyBvZiBtZXJnaW5nIGFuZCBpbnRlZ3JhdGluZyB2YXJpb3VzIGVsZW1lbnRzIG9yIGluZm9ybWF0aW9uIHRvIGNyZWF0ZSBhIHVuaWZpZWQgYW5kIGNvaGVyZW50IHdob2xlLCBmYWNpbGl0YXRpbmcgY2xhcml0eSBhbmQgdW5kZXJzdGFuZGluZyBpbiBjb21wbGV4IGRlc2lnbiBvciBwcm9ibGVtLXNvbHZpbmcgcHJvY2Vzc2VzLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJVc2VyIEZsb3dcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiIEEgZ3JhcGhpY2FsIGRlcGljdGlvbiBpbGx1c3RyYXRpbmcgdGhlIHNlcXVlbnRpYWwgc3RlcHMgYSB1c2VyIGZvbGxvd3MgdG8gYWNjb21wbGlzaCBhIHNwZWNpZmljIHRhc2sgd2l0aGluIGEgc3lzdGVtIG9yIGFwcGxpY2F0aW9uLCBoZWxwaW5nIHRvIHZpc3VhbGl6ZSB0aGUgdXNlcidzIGludGVyYWN0aW9uIHBhdGguXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIlVzZXIgSW5zaWdodHNcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiVmFsdWFibGUgZmluZGluZ3MgZGVyaXZlZCBmcm9tIHVzZXIgcmVzZWFyY2ggdGhhdCBndWlkZSBhbmQgc2hhcGUgZGVzaWduIGRlY2lzaW9ucywgZW5zdXJpbmcgdXNlci1jZW50ZXJlZCBzb2x1dGlvbnMgYW5kIGV4cGVyaWVuY2VzLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJVc2VyIEpvdXJuZXlcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQSB2aXN1YWwgbmFycmF0aXZlIG1hcHBpbmcgb3V0IGEgdXNlcidzIGNvbXBsZXRlIGV4cGVyaWVuY2Ugd2l0aCBhIHByb2R1Y3Qgb3Igc2VydmljZSwgcHJvdmlkaW5nIGluc2lnaHRzIGludG8gdGhlIHVzZXIncyBpbnRlcmFjdGlvbnMsIGVtb3Rpb25zLCBhbmQgdG91Y2hwb2ludHMgdGhyb3VnaG91dCB0aGUgZW50aXJlIGpvdXJuZXkuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIldpcmVmcmFtZXNcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiU2ltcGxpZmllZCBhbmQgdmlzdWFsIGJsdWVwcmludHMgc2hvd2Nhc2luZyB0aGUgc2tlbGV0YWwgc3RydWN0dXJlIGFuZCBsYXlvdXQgb2YgYSB3ZWJzaXRlIG9yIGFwcGxpY2F0aW9uLCBmb2N1c2luZyBvbiBmdW5jdGlvbmFsaXR5IGFuZCBjb250ZW50IHBsYWNlbWVudCBkdXJpbmcgdGhlIGRlc2lnbiBwcm9jZXNzLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgIF19XG4gICAgICAvPlxuXG48YnIgLz5cbnsvKiBcbiAgICAgIDxDYXJkTmF2aWdhdGlvblxuICAgICAgICBtb2R1bGVUaXRsZT1cIldlZWtzIDEzLTE1OiBXZWVrIDEzXCJcbiAgICAgICAgYWN0aXZpdGllc0hlYWRlcj1cIkdyb3VwIFByb2plY3QgfCBEZXNpZ24gU3ByaW50cyBcIlxuICAgICAgICBkYXkxQWN0aXZpdGllcz17W1xuICAgICAgICAgIFwiaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMW9qcnZzQ0ozUFpZQ1dWaDhSWDFnWlpOZUVzWC1aSnBjXCIsXG4gICAgICAgICAgXCIxMy4xLTAxIFByb2plY3QgMiBQcm9wb3NhbFwiLFxuICAgICAgICBdfVxuICAgICAgICAvLyBkYXkyQWN0aXZpdGllcz17W1xuICAgICAgICAvLyAgIFwiaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMUVfRkY3V3hNQ3IySnJBVDlmMUpFLUZWNjg3Y09Nc0FvXCIsXG4gICAgICAgIC8vICAgXCIxMy4yLTAxIERlc2lnbiBTcHJpbnRzIERheSAxXCIsXG4gICAgICAgIC8vICAgXCIxMy4yLTAyIERlc2lnbiBTcHJpbnRzIERheSAyXCJcblxuICAgICAgICAvLyBdfVxuICAgICAgICAvLyBkYXkzQWN0aXZpdGllcz17W1xuICAgICAgICAvLyAgIFwiaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMXV1RHJ5YkNGUFZvN21ORTdVLUl6LXQyMWx3VWtoTTI1XCIsXG4gICAgICAgIC8vICAgXCIxMy4zLTAxIERlc2lnbiBTcHJpbnQgRGF5IDNcIixcbiAgICAgICAgLy8gICBcIjEzLjMtMDIgRGVzaWduIFNwcmludCBEYXkgNFwiLFxuICAgICAgICAvLyAgIFwiMTMuMy0wMyBEZXNpZ24gU3ByaW50IERheSA1XCJcblxuICAgICAgICAvLyBdfVxuICAgICAgICBzbGlkZXNMaW5rcz17W1xuICAgICAgICAgIGBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9wcmVzZW50YXRpb24vZC9lLzJQQUNYLTF2VGFmTHhNWkx1Q2RlNFJBWDRhWkRVMWZpUTJUNGlZcTlxRzRmdUo3Q2ZOanFVb0pacTRnQ0htaFQ2RVVVXzItcUsycVg1QWdKeUs2aktVL2VtYmVkP3N0YXJ0PXRydWUmbG9vcD10cnVlJmRlbGF5bXM9NTAwMGAsXG4gICAgICAgICAgLy8gYGh0dHBzOi8vZG9jcy5nb29nbGUuY29tL3ByZXNlbnRhdGlvbi9kL2UvMlBBQ1gtMXZSdGNFbVowYmhfQU9HYXpQQ29MWTJfZ2tnQXdyWGpLQnp0LUNBNkZ3cFlFbjJTdUw2ZXVfaVVidy1Zb1FGU2JEeWFQVHdaN25fYnlJbmMvZW1iZWQ/c3RhcnQ9dHJ1ZSZsb29wPXRydWUmZGVsYXltcz01MDAwYCxcbiAgICAgICAgICAvLyBgaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvZS8yUEFDWC0xdlRxVkRfMmxiMlE1dlloUTFKcldJRldHbjg3SnVFbEJLdkpKRVZPMDZST2VPQ05zY1NfRUhCVE1Xb29mMHczSDRwNG9HelZDZEREWHJOTC9lbWJlZD9zdGFydD10cnVlJmxvb3A9dHJ1ZSZkZWxheW1zPTUwMDBgLFxuICAgICAgICBdfVxuICAgICAgICBzbGlkZVVSTD1cImh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzE2YXdUZE5aUVZPbmhZenJmckY1aUh1YXQyc1l5ejlpRT91c3A9c2hhcmluZ1wiXG4gICAgICAgIG1vZHVsZUNoYWxsZW5nZUxpbms9XCJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFRSXlwZzY5cVdZX1lmTlVzSTIwdXA0LTY2ZGxNWlM1ZmxNazNYalFibHBnL2VkaXQ/dGFiPXQuMFwiXG4gICAgICAgIGNoYWxsZW5nZURlbGl2ZXJhYmxlcz1cIllvdSBhbmQgeW91ciB0ZWFtIHdpbGwga2ljayBvZmYgYSByZWRlc2lnbiBvZiBhbiBhY3R1YWwgbm9ucHJvZml0IHdlYnNpdGUuIChZb3UmYXBvcztsbCBjb250aW51ZSB0byBidWlsZCBvbiB0aGlzIHByb2plY3QgaW4gdXBjb21pbmcgQ2hhbGxlbmdlcy4pIFwiXG4gICAgICAgIGdsb3NzYXJ5VGVybXM9e1tcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkNhc2UgU3R1ZGllc1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCIgQSB3YXkgdG8gY29udmV5IHRoZSBwcm9jZXNzIGludm9sdmVkIGluIGEgcHJvamVjdCwgb2Z0ZW4gaW5jbHVkaW5nIHZpc3VhbHMgYW5kIHRleHQuIEluIFVYL1VJLCBjYXNlIHN0dWRpZXMgc2hvdyBob3cgZGVzaWduIGNoYWxsZW5nZXMgd2VyZSBhZGRyZXNzZWQuIENhc2Ugc3R1ZGllcyBhcmUgaG93IGRlc2lnbmVycyBzaGFyZSB0aGVpciB3b3JrIHdpdGggdGhlIHdvcmxkLiBUaGV5IHRlbGwgdGhlIHN0b3J5IG9mIHlvdXIgZGVzaWduIHByb2Nlc3MuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkNvbXBldGl0b3IgQW5hbHlzaXNcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiUmVzZWFyY2ggYW5kIGlkZW50aWZpY2F0aW9uIG9mIGNvbXBldGl0b3JzIGFuZCB0aGVpciBzdHJlbmd0aHMgYW5kIHdlYWtuZXNzZXMgcmVsYXRpdmUgdG8geW91ciBvd24gcHJvZHVjdCBvciBzZXJ2aWNlLiBDb21wZXRpdG9yIGFuYWx5c2lzIGhlbHBzIGRlc2lnbmVycyB1bmRlcnN0YW5kIHRoZSBjb21wZXRpdGl2ZSBsYW5kc2NhcGUgYW5kIGlkZW50aWZ5IG9wcG9ydHVuaXRpZXMgdG8gZGlmZmVyZW50aWF0ZSB0aGVpciBwcm9kdWN0LlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJDcml0aXF1ZVwiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJpcyBhIGZlZWRiYWNrIHN0eWxlIGluIHdoaWNoIHRoZSBwZXJzb24gZ2l2aW5nIHRoZSBjcml0aXF1ZSBmb2xsb3dzIGEgcGFydGljdWxhciBmb3JtYXQ6IFRoZXkgbGVhZCB3aXRoIGEgcXVlc3Rpb24sIHRoZW4gaWRlbnRpZnkgYSBkZWNpc2lvbiBpbiB0aGUgZGVzaWduIGJlaW5nIGFuYWx5emVkLCByZWxhdGUgdGhhdCBkZWNpc2lvbiB0byBhbiBvYmplY3RpdmUgb3IgYmVzdCBwcmFjdGljZSwgYW5kIGZpbmFsbHkgZGVzY3JpYmUgaG93IGFuZCB3aHkgdGhlIGRlc2lnbiBkZWNpc2lvbiB3b3JrcyB0byBzdXBwb3J0IHRoZSBvYmplY3RpdmUgKG9yIG5vdCkuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkRlc2lnbiBwb3J0Zm9saW9zXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIiBBIHBvcnRmb2xpbyBpcyBhIGNvbGxlY3Rpb24gb2Ygd29yZHMgYW5kIGltYWdlcyB0aGF0IHRlbGwgYSBzdG9yeSBhbmQgcmVmbGVjdHMgeW91ciBjcmVhdGl2aXR5IGFuZCBzaG93Y2FzZXMgeW91ciB3b3JrIHRvIHBvdGVudGlhbCBjbGllbnRzLiBJdCBzZXJ2ZXMgYXMgYSB0cnVlIGV4YW1wbGUgb2Ygd2hhdCB5b3UgYXJlIGNhcGFibGUgb2YgYW5kIHdoYXQgYWJpbGl0aWVzIHlvdSBoYXZlIHRvIG9mZmVyLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJEaXJlY3QgQ29tcGV0aXRpb25cIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQnVzaW5lc3NlcyB0aGF0IGFyZSBjb21wZXRpbmcgZm9yIHRoZSBzYW1lIHRhcmdldCBtYXJrZXQgYW5kIGN1c3RvbWVycyB3aXRoIHNpbWlsYXIgcHJvZHVjdHMgb3Igc2VydmljZXMuIERpcmVjdCBjb21wZXRpdG9ycyBvZmZlciBwcm9kdWN0cyB0aGF0IGFyZSBzdWJzdGl0dXRlcyBmb3IgZWFjaCBvdGhlci5cIixcbiAgICAgICAgICB9LFxuXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJFbXBhdGh5XCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIlRoZSBhYmlsaXR5IHRvIHVuZGVyc3RhbmQgYW5kIHNoYXJlIHRoZSBmZWVsaW5ncyBvZiBhbm90aGVyLiBJbiBkZXNpZ24sIGVtcGF0aHkgaXMgZXNzZW50aWFsIHRvIHVuZGVyc3RhbmQgdXNlciBuZWVkcywgbW90aXZhdGlvbnMsIGFuZCBwYWluIHBvaW50cyB0byBjcmVhdGUgdXNlci1jZW50ZXJlZCBzb2x1dGlvbnMuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkhldXJpc3RpY3NcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiIEdlbmVyYWwgZ3VpZGVsaW5lcyBvciBwcmluY2lwbGVzIHRoYXQgZGVzaWduZXJzIHVzZSB0byBldmFsdWF0ZSBpbnRlcmZhY2VzIGZvciB1c2FiaWxpdHkuIEhldXJpc3RpY3MgaGVscCBpbiBpZGVudGlmeWluZyB1c2FiaWxpdHkgcHJvYmxlbXMgb3IgYXJlYXMgd2hlcmUgaW1wcm92ZW1lbnQgaXMgbmVlZGVkLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJJbmRpcmVjdCBDb21wZXRpdGlvblwiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJDb25mbGljdCBiZXR3ZWVuIHZlbmRvcnMgd2hvc2UgcHJvZHVjdHMgb3Igc2VydmljZXMgYXJlIG5vdCB0aGUgc2FtZSBidXQgc2F0aXNmeSB0aGUgc2FtZSBjb25zdW1lciBuZWVkLiBJbmRpcmVjdCBjb21wZXRpdGlvbiBjYW4gaW5jbHVkZSBwcm9kdWN0cyBvciBzZXJ2aWNlcyB0aGF0IGFkZHJlc3MgYSBzaW1pbGFyIHVzZXIgcHJvYmxlbSBpbiBhIGRpZmZlcmVudCB3YXkuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIkthbmJhbiBib2FyZFwiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCIgaXMgYSB2aXN1YWwgdG9vbCB0aGF0IGRlcGljdHMgd29yayBhdCB2YXJpb3VzIHN0YWdlcyBvZiBhIHByb2Nlc3MudmlzdWFsbHkgZGVwaWN0IHdvcmsgYXQgdmFyaW91cyBzdGFnZXMgb2YgYSBwcm9jZXNzIHRocm91Z2ggdXNlIG9mIHZpc3VhbHMgbGlrZSBjYXJkcyBvbiBhIGJvYXJkIHRvIHJlcHJlc2VudCB0YXNrcyBmaXR0ZWQgdG8gcGFydGljdWxhciBzdGFnZXMgb2YgdGhlIHByb2Nlc3MuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIlByb2plY3QgbWFuYWdlbWVudCAoVHJhZGl0aW9uYWwpXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcImlzIHRoZSBwcmFjdGljZSBvZiBpbml0aWF0aW5nLCBwbGFubmluZywgZXhlY3V0aW5nLCBjb250cm9sbGluZywgYW5kIGNsb3NpbmcgdGhlIHRlYW0ncyB3b3JrIHRvIGFjaGlldmUgc3BlY2lmaWMgZ29hbHMgYW5kIG1lZXQgc3BlY2lmaWMgc3VjY2VzcyBjcml0ZXJpYSBhdCB0aGUgc3BlY2lmaWVkIHRpbWUuIFRoZSBwcmltYXJ5IGNoYWxsZW5nZSBvZiBwcm9qZWN0IG1hbmFnZW1lbnQgaXMgdG8gYWNoaWV2ZSBhbGwgb2YgdGhlIHByb2plY3QgZ29hbHMgd2l0aGluIHRoZSBnaXZlbiBjb25zdHJhaW50cy5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiUHJvamVjdCBtYW5hZ2VtZW50IChBZ2lsZSlcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQWdpbGUgcHJvamVjdCBtYW5hZ2VtZW50IG9wZXJhdGVzIG9uIGEgc2V0IG9mIHByaW5jaXBsZXMgYWltZWQgdG8gZW5oYW5jZSB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gcGVvcGxlIGFuZCBzb2Z0d2FyZSwgYW5kIHByb21vdGVzIGNvbnRpbnVvdXMgaXRlcmF0aW9uIG9mIGRldmVsb3BtZW50IGFuZCB0ZXN0aW5nLiBJdCdzIGlkZWFsIGZvciBkZXNpZ24gdGVhbXMgdGhhdCB3b3JrIHdpdGggY29udGludW91cyBmZWVkYmFjay4gQWdpbGUgcHJvamVjdHMgdHlwaWNhbGx5IHVzZSBhIHR3by13ZWVrIHNwcmludCBtb2RlbC5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiUHJvZHVjdCBtYW5hZ2Vyc1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJhcmUgcmVzcG9uc2libGUgZm9yIGd1aWRpbmcgdGhlIHN1Y2Nlc3Mgb2YgYSBwcm9kdWN0LiBUaGV5IGxlYWQgY3Jvc3MtZnVuY3Rpb25hbCB0ZWFtcyBhbmQgYXJlIHJlc3BvbnNpYmxlIGZvciBkZWZpbmluZyB0aGUgd2h5LCB3aGVuLCBhbmQgd2hhdCBvZiB0aGUgcHJvZHVjdCB0aGF0IHRoZSBlbmdpbmVlcmluZyB0ZWFtIGJ1aWxkcy5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiUHJvZHVjdCB2aXNpb25cIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiVGhlIGxvbmctdGVybSBnb2FsIG9yIGRlc2lyZWQgc3RhdGUgb2YgYSBwcm9kdWN0IHRoYXQgcHJvZHVjdCBtYW5hZ2VycyBkZWZpbmUgdG8gZ3VpZGUgdGhlIGRldmVsb3BtZW50IGFuZCBldm9sdXRpb24gb2YgdGhlIHByb2R1Y3QuIFRoZSBwcm9kdWN0IHZpc2lvbiBwcm92aWRlcyBhIGNsZWFyIGRpcmVjdGlvbiBhbmQgcHVycG9zZSBmb3IgdGhlIHByb2R1Y3QncyBkZXZlbG9wbWVudC5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiU2NydW1cIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiaXMgdGhlIG1vc3QgcG9wdWxhciBhZ2lsZSBmcmFtZXdvcmsgaW4gc29mdHdhcmUgZGV2ZWxvcG1lbnQuIEl0IGlzIGRlc2lnbmVkIGZvciB0ZWFtcyBvZiB0ZW4gb3IgZmV3ZXIgbWVtYmVycywgd2hvIGJyZWFrIHRoZWlyIHdvcmsgaW50byBnb2FscyB0aGF0IGNhbiBiZSBjb21wbGV0ZWQgd2l0aGluIHRpbWVib3hlZCBpdGVyYXRpb25zLCBjYWxsZWQgU3ByaW50cy5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiU3ByaW50c1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJBIHNwcmludCBpcyBhIHNob3J0LCB0aW1lLWJveGVkIHBlcmlvZCBvZiB0aW1lIGR1cmluZyB3aGljaCBhIHRlYW0gd29ya3MgdG8gY29tcGxldGUgYSBzZXQgYW1vdW50IG9mIHdvcmsuIFRoZSBwZXJpb2Qgb2YgdGltZSBpcyBubyBsb25nZXIgdGhhbiBvbmUgbW9udGggYW5kIG1vc3QgY29tbW9ubHkgdHdvIHdlZWtzLiBTcHJpbnRzIGFyZSBhdCB0aGUgbGlmZWJsb29kIG9mIHNjcnVtIGFuZCBhZ2lsZSBhcHByb2FjaGVzIHRvIHByb2plY3QgbWFuYWdlbWVudC5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiU3RhbmR1cHNcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiQSBzdGFuZHVwIG1lZXRpbmcgaXMgYSBzaG9ydCBtZWV0aW5nIGJldHdlZW4gdGVhbSBtZW1iZXJzLCB1c3VhbGx5IGhlbGQgaW4gYSBjb21tb24gYXJlYSwgYXdheSBmcm9tIGRlc2tzIGFuZCB3b3Jrc3RhdGlvbnMsIG9yIHZpYSBab29tLiBEdXJpbmcgYSBzdGFuZHVwLCB0ZWFtIG1lbWJlcnMgc3VtbWFyaXplIHRoZWlyIGNvbXBsZXRlZCB0YXNrcywgaW4tcHJvZ3Jlc3MgdGFza3MsIGFuZCB0YXNrcyB0byBiZSBzdGFydGVkLiBTdGFuZHVwIG1lZXRpbmdzIGdlbmVyYWxseSBydW4gYWJvdXQgZmlmdGVlbiBtaW51dGVzLiBPdGhlciBuYW1lcyBhcmUg4oCcZGFpbHkgc3RhbmQtdXDigJ0gb3Ig4oCcZGFpbHkgS2FuYmFuLOKAnSBmb3IgdGVhbXMgcHJhY3RpY2luZyB0aGUgS2FuYmFuIG1ldGhvZC5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiU1dPVCBBbmFseXNpc1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCIgQSBzdHJhdGVnaWMgcGxhbm5pbmcgdGVjaG5pcXVlIHVzZWQgdG8gaGVscCBpZGVudGlmeSBhbiBvcmdhbml6YXRpb24ncyBTdHJlbmd0aHMsIFdlYWtuZXNzZXMsIE9wcG9ydHVuaXRpZXMsIGFuZCBUaHJlYXRzIHJlbGF0ZWQgdG8gY29tcGV0aXRvcnMnIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcy4gU1dPVCBhbmFseXNpcyBpcyB1c2VkIGluIGNvbXBldGl0aXZlIGFuYWx5c2lzIHRvIG1ha2UgaW5mb3JtZWQgZGVjaXNpb25zLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJUZWFtd29ya1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJpcyB3aGVuIG1lbWJlcnMgb2YgYSB0ZWFtIGVhY2ggdW5kZXJzdGFuZCB0aGUgdGVhbSBnb2FscyBhbmQgYXJlIGNvbW1pdHRlZCB0byBhdHRhaW5pbmcgdGhlbSB1c2luZyBjcmVhdGl2aXR5LCBpbm5vdmF0aW9uLCBhbmQgZGlmZmVyZW50IHZpZXdwb2ludHMgdG8gYXJyaXZlIGF0IHNvbHV0aW9ucy4gV2hlbiB0aGVyZSdzIHRlYW0gd29yaywgY29tbXVuaWNhdGlvbiBpcyBvcGVuLCBob25lc3QsIHJlc3BlY3RmdWwsIGFuZCBwZW9wbGUgYXJlIGNvbWZvcnRhYmxlIHRha2luZyByZWFzb25hYmxlIHJpc2tzLiBFYWNoIG1lbWJlciBwYXJ0aWNpcGF0ZXMgaW4gdGhlIHRlYW0ncyBhYmlsaXR5IHRvIG1ha2UgaGlnaC1xdWFsaXR5IGRlY2lzaW9ucy5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiVHVja21hbidzIFRlYW0gRGV2ZWxvcG1lbnQgU3RhZ2VzOiBGb3JtaW5nXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIlRoZSB0ZWFtIGhhcyBqdXN0IGJlZW4gaW50cm9kdWNlZCBhbmQgZXZlcnlvbmUgaXMgb3Zlcmx5IHBvbGl0ZSBhbmQgcGxlYXNhbnQuIEF0IHRoZSBzdGFydCwgbW9zdCBhcmUgZXhjaXRlZCB0byBzdGFydCBzb21ldGhpbmcgbmV3IGFuZCB0byBnZXQgdG8ga25vdyB0aGUgb3RoZXIgdGVhbSBtZW1iZXJzLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJUdWNrbWFuJ3MgVGVhbSBEZXZlbG9wbWVudCBTdGFnZXM6IFN0b3JtaW5nIFwiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJUaGUgcmVhbGl0eSBhbmQgd2VpZ2h0IG9mIGNvbXBsZXRpbmcgdGhlIHRhc2sgYXQgaGFuZCBoYXZlIG5vdyBoaXQgZXZlcnlvbmUuIFBlcnNvbmFsaXRpZXMgbWF5IGNsYXNoLiBNZW1iZXJzIG1pZ2h0IGRpc2FncmVlIG92ZXIgaG93IHRvIGNvbXBsZXRlIGEgdGFzayBvciB2b2ljZSB0aGVpciBjb25jZXJucyBpZiB0aGV5IGZlZWwgdGhhdCBzb21lb25lIGlzbid0IHB1bGxpbmcgdGhlaXIgd2VpZ2h0LiBSZW1lbWJlciB0aGF0IG1vc3QgdGVhbXMgZXhwZXJpZW5jZSBjb25mbGljdC5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiVHVja21hbidzIFRlYW0gRGV2ZWxvcG1lbnQgU3RhZ2VzOiBOb3JtaW5nXCIsXG4gICAgICAgICAgICBkZWZpbml0aW9uOlxuICAgICAgICAgICAgICBcIkR1cmluZyB0aGUgbm9ybWluZyBzdGFnZSwgcGVvcGxlIHN0YXJ0IHRvIG5vdGljZSBhbmQgYXBwcmVjaWF0ZSB0aGVpciB0ZWFtIG1lbWJlcnMnIHN0cmVuZ3Rocy4gR3JvdXBzIHN0YXJ0IHRvIHNldHRsZSBpbnRvIGEgZ3Jvb3ZlLiBFdmVyeW9uZSBpcyBjb250cmlidXRpbmcgYW5kIHdvcmtpbmcgYXMgYSBjb2hlc2l2ZSB1bml0LlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGVybTogXCJUdWNrbWFuJ3MgVGVhbSBEZXZlbG9wbWVudCBTdGFnZXM6IFBlcmZvcm1pbmdcIixcbiAgICAgICAgICAgIGRlZmluaXRpb246XG4gICAgICAgICAgICAgIFwiR3JvdXBzIGFyZSBtb3JlIGNvbmZpZGVudCwgbW90aXZhdGVkLCBhbmQgZmFtaWxpYXIgZW5vdWdoIHdpdGggdGhlIHByb2plY3QgYW5kIHRoZWlyIHRlYW0gdGhhdCB0aGV5IGNhbiBvcGVyYXRlIHdpdGhvdXQgc3VwZXJ2aXNpb24uIEV2ZXJ5b25lIGlzIG9uIHRoZSBzYW1lIHBhZ2UgYW5kIGRyaXZpbmcgZnVsbC1zcGVlZCBhaGVhZCB0b3dhcmRzIHRoZSBmaW5hbCBnb2FsLi5cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRlcm06IFwiVHVja21hbidzIFRlYW0gRGV2ZWxvcG1lbnQgU3RhZ2VzOiBBZGpvdXJuaW5nIFwiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJPbmNlIGEgcHJvamVjdCBlbmRzLCB0aGUgdGVhbSBkaXNiYW5kcy4gVGhpcyBwaGFzZSBpcyBzb21ldGltZXMga25vd24gYXMgbW91cm5pbmcgYmVjYXVzZSBtZW1iZXJzIGhhdmUgZ3Jvd24gY2xvc2UgYW5kIGZlZWwgYSBsb3NzIG5vdyB0aGF0IHRoZSBleHBlcmllbmNlIGlzIG92ZXIuXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0ZXJtOiBcIlVzZXIgU3Rvcmllc1wiLFxuICAgICAgICAgICAgZGVmaW5pdGlvbjpcbiAgICAgICAgICAgICAgXCJCcmllZiwgd3JpdHRlbiBkZXNjcmlwdGlvbnMgb2YgZmVhdHVyZXMgb3IgZnVuY3Rpb25hbGl0eSBmcm9tIGFuIGVuZC11c2VyIHBlcnNwZWN0aXZlLiBVc2VyIHN0b3JpZXMgYXJlIHVzZWQgaW4gQWdpbGUgc29mdHdhcmUgZGV2ZWxvcG1lbnQgdG8gY2FwdHVyZSByZXF1aXJlbWVudHMgYW5kIGZvY3VzIG9uIHRoZSB1c2VyJ3MgbmVlZHMgYW5kIGdvYWxzLlwiLFxuICAgICAgICAgIH0sXG4gICAgICAgIF19XG4gICAgICAvPiAqL31cbiAgICA8L1Byb3RlY3RlZFJvdXRlPlxuXG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBPbmU7XG4iXSwibmFtZXMiOlsiQ2FyZE5hdmlnYXRpb24iLCJQcm90ZWN0ZWRSb3V0ZSIsIlJlYWN0IiwiT25lIiwibW9kdWxlVGl0bGUiLCJhY3Rpdml0aWVzSGVhZGVyIiwic2xpZGVzTGlua3MiLCJkYXkyQWN0aXZpdGllcyIsInNsaWRlVVJMIiwibW9kdWxlQ2hhbGxlbmdlTGluayIsImNoYWxsZW5nZURlbGl2ZXJhYmxlcyIsImJyIiwiYWN0aXZpdGllc0xpbmsiLCJkYXkxQWN0aXZpdGllcyIsImdsb3NzYXJ5VGVybXMiLCJ0ZXJtIiwiZGVmaW5pdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/week/13-15.tsx\n"));

/***/ })

});